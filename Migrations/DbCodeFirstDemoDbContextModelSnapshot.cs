// <auto-generated />
using System;
using DbCodeFirstDemo.Models.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DbCodeFirstDemo.Migrations
{
    [DbContext(typeof(DbCodeFirstDemoDbContext))]
    partial class DbCodeFirstDemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DbCodeFirstDemo.Models.DataBase.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("MAJ")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("DbCodeFirstDemo.Models.DataBase.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("Creation")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("MAJ")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PageId");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("DbCodeFirstDemo.Models.DataBase.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Creation")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Html")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("MAJ")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Page");
                });

            modelBuilder.Entity("DbCodeFirstDemo.Models.DataBase.Comment", b =>
                {
                    b.HasOne("DbCodeFirstDemo.Models.DataBase.Page", "Page")
                        .WithMany("Comments")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Page");
                });

            modelBuilder.Entity("DbCodeFirstDemo.Models.DataBase.Page", b =>
                {
                    b.HasOne("DbCodeFirstDemo.Models.DataBase.Blog", "Blog")
                        .WithMany("Pages")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("DbCodeFirstDemo.Models.DataBase.Blog", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("DbCodeFirstDemo.Models.DataBase.Page", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
